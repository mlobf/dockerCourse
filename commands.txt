General Commands

 sudo docker run -p 3000:80 1275441658d2    => create a new containers based on Image.
 sudo docker ps -a                      
 sudo docker stop great_lovelace
 sudo docker build .  

Manage Images and Containers.

    docker ps -a                                        => Show all containers.

    docker ps -help                                     => To see all avalaible options.

    docker start containers'sNameGoesHere               => To restart a previous container without creating a new one || using dettached by default
    
    docker start -a containers'sNameGoesHere            => To restart in attach mode 

    docker attach name_of_countainer                    => To run in attach mode

    docker logs fervent_volhard                         => To see all related logs

    docker run -it container'sNameGoesHere              => To run in interative mode tty

    docker rm name_of_countainer                        => To remove some container

    docker rm name_of_countainer1 name_of_countainer2   => To  remove many containers

    docker rmi putHereImageId                           => To remove by image id and related layers

    docker run --rm container'sNameGoesHere             => To run in interative and to be removes as get finished.

    # Inspecting Images.......
    docker image inspect IMAGE ID                       => To inspect some image by ID

    # Copying Files Into & From A Container

    docker cp                                           => To copy some file to a runnig container 
        docker cp dummy/test.txt fervent_volhard:/test    

    # How to taggerd our put a name to a container or image
        sudo docker run --name theNewName 6ea6f42002d2      

    # How to exec into a Docker Containers
        sudo docker exec -it pg bash

    # How to share images and containers.
        We share images, not Containers.
        docker push marcoslemeborbafilho/dummy-node-app

        # - Creating a new images and tagging a new name which is the same name as my personal repo at Dockerhub.
        sudo docker build -t marcoslemeborbafilho/dummy-node-app .

        # - Renaming or retagging a existing image to a new name which is the same name as my personal repo at Dockerhub.
        sudo docker tag old_name new_name

        # - To push a new image
        sudo docker push marcoslemeborbafilho/dummy-node-app

        # - To pull a my image
        sudo docker pull marcoslemeborbafilho/dummy-node-app

        # - to run this image.
        sudo docker run -p 8000:3000 --rm marcoslemeborbafilho/dummy-node-app


        # --------------------------------------------------------------------------------------------------------------------
        # Data using Docker
        # --------------------------------------------------------------------------------------------------------------------

        sudo docker build -t feedback-node .

        sudo docker run -p 3000:80 -d --name feedback-app --rm feedback-node

        sudo docker stop feedback-app


        # Now using volumes

        sudo docker run -d -p 3000:80 --rm --name feedback-app:volumes feedback-node
        sudo docker run -p 3000:80 -d --name feedback-app feedback-node:volumes 

        sudo docker logs feedback-app

        sudo docker build -t feedback-node:volumes .        

        # Para remover o container
        sudo docker rmi feedback-node:volumes --force

        sudo docker run -d -p 3000:80 --rm --name feedback-app feedback-node:volumes        

    # Para ver os volumes adminstrados pelo docker 
        sudo docker volume COMMAND --help        
        sudo docker volume ls
    # Para criar uma named volume
    sudo docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback feedback-node:volumes


    Removing Anonymous Volumes

    We saw, that anonymous volumes are removed automatically, when a container is removed.

    This happens when you start / run a container with the --rm option.

    If you start a container without that option, the anonymous volume would NOT be removed, even if you remove the container (with docker rm ...).

    Still, if you then re-create and re-run the container (i.e. you run docker run ... again), a new anonymous volume will be created. So even though the anonymous volume wasn't removed automatically, it'll also not be helpful because a different anonymous volume is attached the next time the container starts (i.e. you removed the old container and run a new one).

    Now you just start piling up a bunch of unused anonymous volumes - you can clear them via docker volume rm VOL_NAME or docker volume prune.

    # Get started with Bind Mounts.
    Toda vez que alteramos alguma coisa at source code , this changes does not reflect at runing container. 
    In order to do that, we have to rebuild it.
    So ... the binds  mounts comes to helps us with this problem.

    => sudo docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback -v "/home/mbf/Documents/pessoal/mygit/dockerMaxCourse/dockerCourse/data_docker/data-volumes-01-starting-setup/data-volumes-01-starting-setup:/app" feedback-node:volumes


